@using SmpsPortal.Core.Models
@using SmpsPortal.Core.ViewModels
@using Syncfusion.JavaScript
@using Syncfusion.JavaScript.Models
@using Syncfusion.MVC.EJ
@model SmpsPortal.Core.ViewModels.EmployeeViewModel
@{
    ViewBag.Title = Model.Heading;
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="container body-content">
    <div class="row">
      

        <div class="col-md-12">
            <!--<button type="button" id="addBtn" class="btn btn-info"> Add </button>-->
            <p></p>
            <div class="panel panel-default pan2">
                <!-- Default panel contents -->
                <div class="panel-heading">@Model.Heading</div>

                <div style="padding: 10px 10px;">

                    @using (Html.BeginForm(Model.Action, "Employee"))
                    {
                        <ul class="nav nav-tabs nav-justified">
                            <li role="presentation" class="active">
                                <a href="#personal" data-toggle="tab">Personal Info</a>



                            </li>
                           
                            <li role="presentation">
                                <a href="#job" data-toggle="tab">Job Info</a>

                            </li>
                        </ul>

                        <div class="tab-content">
                            <div id="personal" class="tab-pane fade in active">
                                <p></p>
                                @Html.AntiForgeryToken()
                                @Html.HiddenFor(m => m.Id)
                                <hr />
                                @Html.ValidationSummary("", new { @class = "text-danger" })
                                <div class="form-group">
                                    @Html.LabelFor(m => m.Email, "Email")
                                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control", autofocus = "autofocus" })

                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(m => m.FirstName, "First Name")
                                    @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control", autofocus = "autofocus" })

                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(m => m.LastName, "Last Name")
                                    @Html.TextBoxFor(m => m.LastName, new { @class = "form-control", autofocus = "autofocus" })

                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(m => m.Phone, "Phone")
                                    @Html.TextBoxFor(m => m.Phone, new { @class = "form-control", autofocus = "autofocus" })

                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(m => m.Gender, "Gender")
                                    @Html.DropDownListFor(m => m.Gender, EnumHelper.GetSelectList(typeof(Gender)), "Select Gender", new { @class = "form-control" })

                                </div>


                                <div class="form-group">
                                    @Html.LabelFor(m => m.DateofBirth, "Date of Birth")
                                    @Html.EJ().DatePickerFor(m => m.DateofBirth, new { @class = "form-control", autofocus = "autofocus" })

                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(m => m.Address, "Residential Address")
                                    @Html.TextAreaFor(m => m.Address, new { @class = "form-control", autofocus = "autofocus" })

                                </div>


                            </div>
                           
                            <div id="job" class="tab-pane fade">
                                <p></p>
                                <div class="form-group">
                                    @Html.LabelFor(m => m.DepartmentId, "Department")
                                    @Html.DropDownListFor(m => m.DepartmentId, new SelectList(Model.DepartmentList, "Id", "Title"), "Select Department", new { @class = "form-control" })

                                </div>
                                @if (Model.Action == "Update")
                                {
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.DesignationId, "Designation")
                                        @Html.DropDownListFor(m => m.DesignationId, new SelectList(Model.DesignationList, "Id", "Title"), new { @class = "form-control" })

                                    </div>
                                }
                                else
                                {
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.DesignationId, "Designation")
                                        @Html.DropDownListFor(m => m.DesignationId, new SelectList(String.Empty, "Value", "Text"), new { @class = "form-control" })

                                    </div>
                                }

                                <div class="form-group">
                                    @Html.LabelFor(m => m.EmployeeType, "Employee Type")
                                    @Html.DropDownListFor(m => m.EmployeeType, EnumHelper.GetSelectList(typeof(EmployeeType)), "Select Type", new { @class = "form-control" })

                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(m => m.EmployeeCategory, "Employee Category")
                                    @Html.DropDownListFor(m => m.EmployeeCategory, EnumHelper.GetSelectList(typeof(EmployeeCategory)), "Select Category", new { @class = "form-control" })

                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(m => m.DateEmployed, "Date Employed")
                                    <div class="input-group" id="datepicker1"></div>
                                    @Html.EJ().DatePickerFor(m => m.DateEmployed, new { @class = "form-control", autofocus = "autofocus" })

                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(m => m.IsConfirmed, "Is Confirmed?")
                                    @Html.CheckBoxFor(m => m.IsConfirmed, new { @class = "form-control", autofocus = "autofocus" })
                                </div>
                                <div class="form-group" id="confDate">
                                    @Html.LabelFor(m => m.DateConfirmed, "Date Confirmed")
                                    @Html.EJ().DatePickerFor(m => m.DateConfirmed, new { @class = "form-control", autofocus = "autofocus" })

                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(m => m.IsActive, "Is Active?")
                                    @Html.CheckBoxFor(m => m.IsActive, new { @class = "form-control", autofocus = "autofocus" })
                                </div>

                                <button type="submit" class="btn btn-primary btn-md"> Save </button>
                            </div>
                        </div>

                    }

                </div>


            </div>


        </div>

    </div>
</div>



@section scripts
{
    <script>
        $(function () {

            // initialize DatePicker component

            $("#DateEmployed").ejDatePicker();
            $("#DateofBirth").ejDatePicker();
            $("#DateConfirmed").ejDatePicker();

        });
        $(document)
            .ready(function () {
                $("#confDate").hide();
                $("#IsConfirmed").click(function () {
                    if ($(this).is(":checked")) {
                        $("#confDate").show();
                    } else {
                        $("#confDate").hide();
                    }
                });
                var desigUrl = "Designations";
                LoadDropDownController("#DepartmentId", "#DesignationId", desigUrl);
            });

    </script>

    @Scripts.Render("~/bundles/jqueryval")


}
